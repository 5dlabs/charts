---
nameOverride: ""
fullnameOverride: ""

image:
  repository: ghcr.io/5dlabs/agent-docs
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []

replicaCount: 2

service:
  type: ClusterIP
  port: 80
  targetPort: 3001

env:
  # When not using an existing secret, set inline values here
  DATABASE_URL: ""
  OPENAI_API_KEY: ""
  RUST_LOG: "info,doc_server=debug"
  PORT: "3001"
  MCP_HOST: "0.0.0.0"

# If set, chart will read env via secretKeyRef instead of plain values
secret:
  existingSecret: ""
  keys:
    # Map runtime DATABASE_URL from VECTOR_DATABASE_URL key in the secret
    DATABASE_URL: VECTOR_DATABASE_URL
    OPENAI_API_KEY: OPENAI_API_KEY

resources:
  requests:
    cpu: 500m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 1Gi

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

serviceAccount:
  create: true
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75

migrations:
  serviceAccountName: default
  enabled: true
  backoffLimit: 3
  activeDeadlineSeconds: 7200
  # Command and args used for the migration job
  # Defaults run the server binary in migration-only mode from the runtime image
  command: ["/app/http_server"]
  args: ["--migrate-only"]
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  annotations: {}
  # Optional extra env vars for migration job
  extraEnv: []

nodeSelector: {}

tolerations: []

affinity: {}
