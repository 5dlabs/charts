{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent-docs-server.fullname" . }}-worker
  labels:
    app.kubernetes.io/name: {{ include "agent-docs-server.name" . }}
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "agent-docs-server.name" . }}
      app.kubernetes.io/component: worker
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "agent-docs-server.name" . }}
        app.kubernetes.io/component: worker
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "agent-docs-server.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/job_worker"]
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          env:
            {{- if .Values.secret.existingSecret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.existingSecret }}
                  key: {{ .Values.secret.keys.DATABASE_URL }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.existingSecret }}
                  key: {{ .Values.secret.keys.OPENAI_API_KEY }}
            {{- else }}
            - name: DATABASE_URL
              value: {{ required "DATABASE_URL must be set" .Values.env.DATABASE_URL | quote }}
            - name: OPENAI_API_KEY
              value: {{ .Values.env.OPENAI_API_KEY | quote }}
            {{- end }}
            - name: RUST_LOG
              value: {{ .Values.worker.env.RUST_LOG | quote }}
            - name: REDIS_URL
              value: {{ .Values.queue.redisUrl | quote }}
            - name: WORKER_JOB_TYPES
              value: {{ .Values.worker.env.WORKER_JOB_TYPES | quote }}
            - name: CLAUDE_BINARY_PATH
              value: {{ .Values.worker.env.CLAUDE_BINARY_PATH | default "claude" | quote }}
            - name: CLAUDE_MODEL
              value: {{ .Values.worker.env.CLAUDE_MODEL | default "claude-3-5-sonnet-20241022" | quote }}
            - name: CLAUDE_TIMEOUT_SECS
              value: {{ .Values.env.CLAUDE_TIMEOUT_SECS | default "180" | quote }}
            - name: INGEST_WORK_DIR
              value: {{ ternary .Values.persistence.mountPath .Values.env.INGEST_WORK_DIR .Values.persistence.enabled | quote }}
          volumeMounts:
            - name: workdir
              mountPath: {{ if .Values.persistence.enabled }}{{ .Values.persistence.mountPath }}{{ else }}/tmp{{ end }}
              readOnly: false
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: workdir
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{ else }}{{ include "agent-docs-server.fullname" . }}-workdir{{ end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}
