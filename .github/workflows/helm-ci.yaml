name: Helm CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint-validate-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: List changed charts (PRs only)
        if: github.event_name == 'pull_request'
        id: list
        run: |
          changed=$(ct list-changed --config .github/ct-config.yaml || true)
          echo "changed=$changed" >> $GITHUB_OUTPUT
          echo "Changed charts:\n$changed"

      - name: Lint charts with Helm (PR)
        if: github.event_name == 'pull_request' && steps.list.outputs.changed != ''
        run: |
          for chart in $(ct list-changed --config .github/ct-config.yaml); do
            echo "Linting $chart"
            helm lint "$chart" --strict
          done

      - name: Lint charts with Helm (push)
        if: github.event_name == 'push'
        run: |
          for chart in $(find . -mindepth 1 -maxdepth 2 -type f -name Chart.yaml -exec dirname {} \;); do
            echo "Linting $chart"
            helm lint "$chart" --strict
          done

      - name: Create KinD cluster
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && steps.list.outputs.changed != '')
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: charts-ci

      - name: Install kubeconform
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && steps.list.outputs.changed != '')
        run: |
          curl -L https://github.com/yannh/kubeconform/releases/download/v0.6.7/kubeconform-linux-amd64.tar.gz | sudo tar -xz -C /usr/local/bin kubeconform
          kubeconform -v

      - name: Render + kubeconform validate (PR changed charts)
        if: github.event_name == 'pull_request' && steps.list.outputs.changed != ''
        run: |
          set -euo pipefail
          for chart in $(ct list-changed --config .github/ct-config.yaml); do
            echo "Rendering $chart"
            helm template test-$RANDOM "$chart" -f ci/ct-values-common.yaml | kubeconform -strict -summary -ignore-missing-schemas || exit 1
          done

      - name: Render + kubeconform validate (push all charts)
        if: github.event_name == 'push'
        run: |
          set -euo pipefail
          for chart in $(find . -mindepth 1 -maxdepth 2 -type f -name Chart.yaml -exec dirname {} \;); do
            echo "Rendering $chart"
            helm template test-$RANDOM "$chart" -f ci/ct-values-common.yaml | kubeconform -strict -summary -ignore-missing-schemas || exit 1
          done

      - name: Install changed charts into KinD (PR)
        if: github.event_name == 'pull_request' && steps.list.outputs.changed != ''
        run: ct install --config .github/ct-config.yaml

      - name: Install all charts into KinD (push)
        if: github.event_name == 'push'
        run: ct install --config .github/ct-config.yaml --all
